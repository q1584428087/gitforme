git学习笔记
1.git add _______			添加文件到仓库
2.git commit -m "___"		提交文件到仓库 后面是备注
3.git status				查看当前仓库的状态
4.git log					查看提交历史 后面加上--pretty=oneline使得单行显示
5.git reflog				查看命令历史
6.cat						抓取文件内容
7.mkdir _____   			创建文件
8.cd ______					跳转到某文件
9.pwd						查看当前目录
10.git init					初始化目录使之成为git 管理的仓库
11.git diff					查看修改内容
12.git reset --hard ___a__	回退到a对应的版本 若为 HEAD 则^代表回退一个版本  ~d代表回退d个版本
13.rm _______				从工作区删除文件
14.git rm _______			从工作区和暂存区删除文件
15.git checkout -- _____	用版本区的文件替换工作区的文件
16.git restore _____		取消工作区的修改
17.git checkout -b ____		创建分支并切换到该分支
18.git branch ___			创建分支 若不输入分支则代表查看所有分支，*代表当前分支
19.git checkout ___			切换到分支
20.git merge ____			合并指定分支到当前分支
//git merge --no-ff -m "__" __ 使用普通合并
21.git branch -d ____		删除该分支
//改为-D 则强行删除	可用于丢弃一个没有被合并过的分支
22.git switch -c ____		创建并切换至分支
23.git log --graph --pretty=oneline --abbrev-commit		查看所有分支合并情况
24.git log --graph			查看近几个分支合并情况
25.git stash 				存储当前工作区然后清空
//git stash list			查看存储列表
//git stash apply			恢复存储内容但是stash内容不删除
//git stash drop			删除stash内容
//git stash pop				恢复的同时删除stash内容
26.git cherry-pick _____	复制特定的提交到当前分支
27.git remote				查看远程库的信息
//git remote -v 			查看更为详细的信息
28.git pull 				抓取远程的新提交
29.git checkout -b branch-name origin/branch-name	本地创建与远程分支相同的分支 
30.git branch --set-upstream branch-name origin/branch-name	链接本地分支和远程分支
31.git rebase				变基 可用于将分叉变为直线

建立远程库
1.创立SSH KEY 
ssh-keygen -t rsa -C "youremail@example.com"
2.登录github -> 打开settings -> 打开SSH Keys -> 在文本框中粘贴id_rsa.pub文件的内容
3.建立仓库repository
4.根据提示输入git remote add origin git@github.com:michaelliao/learngit.git类似的命令
5.git push -u origin master  第一次推送
6.git push origin master 之后的推送

克隆远程库
1.git clone 地址


多人协作工作模式g
：：：：：
1.首先，可以试图用git push origin <branch-name>推送自己的修改；

2.如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；

3.如果合并有冲突，则解决冲突，并在本地提交；

4.没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！

5.如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream-to <branch-name> origin/<branch-name>。
